name: Terraform CI/CD

on:
  push:
    branches: [test]
  pull_request:
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to apply (dev or prod)"
        required: true
        default: "dev"

env:
  AWS_REGION: us-east-1
  TF_VERSION: 1.7.5

jobs:
  terraform:
    name: Terraform Format, Validate, Plan
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v4

      - name: 📦 Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: 📁 Select environment directory
        run: |
          echo "TF_ENV_DIR=envs/dev" >> $GITHUB_ENV

      - name: 📐 Terraform Format
        run: terraform fmt -check -recursive

      - name: ⚙️ Terraform Init
        working-directory: ${{ env.TF_ENV_DIR }}
        run: terraform init -backend-config="dev.backend.tfvars"

      - name: ✅ Terraform Validate
        working-directory: ${{ env.TF_ENV_DIR }}
        run: terraform validate

      - name: 📊 Terraform Plan
        working-directory: ${{ env.TF_ENV_DIR }}
        run: terraform plan -input=false

  apply:
    name: 🚀 Terraform Apply
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    needs: terraform

    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v4

      - name: 📦 Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: 📁 Select environment directory
        run: |
          echo "TF_ENV_DIR=envs/${{ github.event.inputs.environment }}" >> $GITHUB_ENV

      - name: ⚙️ Terraform Init
        working-directory: ${{ env.TF_ENV_DIR }}
        run: terraform init -backend-config="${{ github.event.inputs.environment }}.backend.tfvars"

      - name: 🚀 Terraform Apply
        working-directory: ${{ env.TF_ENV_DIR }}
        run: terraform apply -auto-approve
